generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id                String          @id @default(uuid())
  number            Int             @unique @default(autoincrement())
  status            OrderStatus     @default(WAITING_PAYMENT)
  deliveryAddress   DeliveryAddress @relation(fields: [deliveryAddressId], references: [id])
  deliveryAddressId String          @unique
  items             OrderItem[]
  customerId        String
  paid              Boolean         @default(false)
  clientSecret      String?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
}

model DeliveryAddress {
  id           String   @id @default(uuid())
  order        Order?
  zipcode      String
  city         String
  neighborhood String
  street       String
  number       Int
  complement   String?
  reference    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model OrderItem {
  id           String  @id @default(uuid())
  order        Order   @relation(fields: [orderId], references: [id])
  orderId      String
  product      Product @relation(fields: [productId], references: [id])
  productId    String
  quantity     Int
  productPrice Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id     String      @id @default(uuid())
  name   String
  price  Float
  orders OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  WAITING_PAYMENT
  PENDING
  CONFIRMED
  DELIVERED
  CANCELLED
}
